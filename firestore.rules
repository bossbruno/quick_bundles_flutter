rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if false; // Prevent user deletion
    }

    // Transactions collection
    match /transactions/{transactionId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        resource.data.vendorId == request.auth.uid
      );
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        resource.data.vendorId == request.auth.uid
      );
      allow delete: if false; // Transactions should be immutable
    }

    // Bundles collection
    match /bundles/{bundleId} {
      allow read: if isAuthenticated(); // All users can view bundles
      allow write: if false; // Only admin can modify bundles
    }

    // Listings collection
    match /listings/{listingId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        resource.data.vendorId == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.vendorId == request.auth.uid;
    }
  }
} 